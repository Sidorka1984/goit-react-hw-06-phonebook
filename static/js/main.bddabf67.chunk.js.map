{"version":3,"sources":["component/Container/Container.styles.jsx","component/Container/Container.jsx","redux/slices/todo.js","component/Form/Form.styles.jsx","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","redux/store.js","index.js"],"names":["Containers","styled","div","Title","h1","Container","title","children","propType","PropType","string","isRequired","node","todoSlice","createSlice","name","initialState","id","number","reducers","addContact","state","action","push","uuidv4","payload","onDelete","filter","todo","actions","TitleSecond","h2","Input","input","Button","button","Form","useState","setName","setNumber","dispatch","useDispatch","nameInputId","numberInputId","heandleChange","e","target","value","reset","onSubmit","preventDefault","htmlFor","type","placeholder","pattern","onChange","required","disabled","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","contacts","useSelector","map","onClick","App","setContacts","setFilter","firstRender","useRef","useEffect","JSON","parse","localStorage","getItem","ContactsJson","current","parsedContacts","setItem","stringify","contact","some","alert","currentTarget","length","normalizedFilter","toLowerCase","includes","getVisibleContacts","onDeleteContact","contactId","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bddabf67.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import PropType from 'prop-types';\r\nimport { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nContainer.propType = {\r\n    title: PropType.string.isRequired,\r\n    children: PropType.node,\r\n};\r\nexport default Container;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n// import { number, string } from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  reducers: {\n    addContact: (state, action) => {\n      state.push({\n        id: uuidv4(),\n        name: action.payload,\n        number: action.payload.number,\n      });\n    },\n    onDelete: (state, action) =>\n      state.filter((todo) => todo.id !== action.payload),\n  },\n});\n\nexport const { addContact, onDelete } = todoSlice.actions;\nexport default todoSlice.reducer;\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from '../../redux/slices/todo.js';\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(addContact(name, number));\r\n        \r\n        // onSubmit(name, number);\r\n        reset();\r\n    };\r\n    const heandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value)\r\n                break\r\n            case 'number':\r\n                setNumber(value)\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={heandleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                onChange={heandleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-around;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onDelete } from '../../redux/slices/todo.js';\r\nimport PropTypes from 'prop-types';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\n\r\nconst ContactsList = () => {\r\n    const contacts = useSelector((state) => state.todo);\r\n    const dispatch = useDispatch();\r\n    // const onDeleteContact = () => {        \r\n        // dispatch(onDelete(id));\r\n    // }\r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><AiOutlineUser /><Text>{name}: {number}</Text>\r\n                    <BtnDelete onClick={() =>dispatch(onDelete(id))}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactsList;","import { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\nimport { GrContactInfo } from \"react-icons/gr\";\nimport ContactsJson from \"../Data/contacts.json\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n\n  const [filter, setFilter] = useState(\"\");\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    setContacts(JSON.parse(localStorage.getItem(\"contacts\")) ?? ContactsJson);\n  }, []);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n      firstRender.current = false;\n      return;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandle = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in the contacts.`);\n      return;\n    }\n    setContacts((contacts) => [contact, ...contacts]);\n  };\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n  return (\n    <Container title=\"Phonebook\">\n      <Form onSubmit={formSubmitHandle} />\n      <h2>\n        <GrContactInfo /> Contacts\n      </h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {contacts.length > 0 && (\n        <ContactsList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      )}\n    </Container>\n  );\n}\n","// import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\n// import { rootReduser } from \"../reducers\";\nimport todo from \"../redux/slices/todo\";\n\n// const store = createStore(rootReduser, devToolsEnhancer());\nconst rootReducer = {\n  todo,\n};\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n\n// import { configureStore, getDefaultMiddleware  } from \"@reduxjs/toolkit\";\n//\n// import logger from \"redux-logger\";\n// import {\n// persistStore,\n// persistReducer,\n// FLUSH,\n// REHYDRATE,\n// PAUSE,\n// PERSIST,\n// PURGE,\n// REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import contactsReducer from \"../redux/reducers/todo\";\n//\n// const persistConfig = {\n// key: \"contacts\",\n// storage,\n// blacklist: [\"filter\"],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n// serializableCheck: {\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n// },\n//   }),\n//   logger,\n// ];\n\n// export const store = configureStore({\n// reducer: {\n// contacts: persistReducer(persistConfig, contactsReducer),\n// },\n// devTools: process.env.NODE_ENV === \"development\",\n// middleware: getDefaultMiddleware({\n// serializableCheck: {\n// ignoredActions:[FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n// }\n// })\n// });\n//\n// export const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./component/App\";\nimport { Provider } from \"react-redux\";\n// import store from \"./redux/store\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}