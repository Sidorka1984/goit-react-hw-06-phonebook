{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","redux/selectors.js","component/Form/Form.styles.jsx","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Containers","styled","div","Title","h1","Container","title","children","propType","PropType","string","isRequired","node","getFilter","getContacts","getVisibleContacts","contact","toLowerCase","includes","TitleSecond","h2","Input","input","Button","button","Form","useState","setName","setNumber","dispatch","useDispatch","nameInputId","useSelector","numberInputId","heandleChange","e","currentTarget","value","reset","onSubmit","preventDefault","actions","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","disabled","Text","p","Filter","target","Contact","ul","ContactItem","li","BtnDelete","ContactsList","map","onClick","App","setContacts","setFilter","firstRender","useRef","useEffect","JSON","parse","localStorage","getItem","ContactsJson","current","parsedContacts","setItem","stringify","some","alert","length","normalizedFilter","onDeleteContact","contactId","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6a07ab06.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('items/add', ({ name, number }) =>({\r\n    payload: {\r\n    id: uuidv4(),\r\n      name,\r\n      number,\r\n  }, \r\n  }))\r\n\r\nexport const deleteContact = createAction('items/delete')\r\nexport const changeFilter = createAction('items/changeFilter')","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { deleteContact, addContact, changeFilter } from \"../redux/actions\";\n\nconst items = createReducer([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],  {\n    [addContact]: (state, { payload }) => [...state, payload.name, payload.number],\n    [deleteContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  }\n);\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import PropType from 'prop-types';\r\nimport { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nContainer.propType = {\r\n    title: PropType.string.isRequired,\r\n    children: PropType.node,\r\n};\r\nexport default Container;\r\n","export const getFilter = (state) => state.contacts.filter;\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  \n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter)\n  );\n};\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/selectors.js\";\r\nimport * as actions from \"../../redux/actions.js\";\r\n// import { addContact } from '../../redux/slices/todo.js';\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts)\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // if (contacts.some((contact) => contact.name === name)) {\r\n            // console.log(`${name} already in the contacts.`);\r\n            // return;\r\n        // }\r\n        dispatch(actions.addContact(name, number));\r\n        // dispatch(addContact(name, number));\r\n        \r\n        // onSubmit(name, number);\r\n        reset();\r\n    };\r\n    const heandleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value)\r\n                break\r\n            case 'number':\r\n                setNumber(value)\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={heandleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={heandleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","// import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { getFilter } from \"../../redux/selectors.js\";\r\nimport * as actions from \"../../redux/actions.js\";\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\r\n    \r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\n// Filter.propTypes = {\r\n    // value: PropTypes.string,\r\n    // onChange: PropTypes.func.isRequired,\r\n// };\r\n// \r\nexport default Filter;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-around;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { onDelete } from '../../redux/slices/todo.js';\r\n// import PropTypes from 'prop-types';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\nimport * as actions from \"../../redux/actions.js\";\r\nimport { getVisibleContacts } from \"../../redux/selectors.js\";\r\n\r\nconst ContactsList = () => {\r\n    // const contacts = useSelector((state) => state.todo);\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    // const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n    \r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><AiOutlineUser />\r\n                    <Text>{name}: {number}</Text>\r\n                    <BtnDelete onClick={() => dispatch(actions.deleteContact(id))}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\n// ContactsList.propTypes = {\r\n    // contacts: PropTypes.arrayOf(\r\n        // PropTypes.shape({\r\n            // id: PropTypes.string.isRequired,\r\n            // name: PropTypes.string.isRequired,\r\n            // number: PropTypes.string.isRequired,\r\n        // })\r\n    // ).isRequired,\r\n    // onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactsList;","import { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\nimport { GrContactInfo } from \"react-icons/gr\";\nimport ContactsJson from \"../Data/contacts.json\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n\n  const [filter, setFilter] = useState(\"\");\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    setContacts(JSON.parse(localStorage.getItem(\"contacts\")) ?? ContactsJson);\n  }, []);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n      firstRender.current = false;\n      return;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandle = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in the contacts.`);\n      return;\n    }\n    setContacts((contacts) => [contact, ...contacts]);\n  };\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n  return (\n    <Container title=\"Phonebook\">\n      <Form onSubmit={formSubmitHandle} />\n      <h2>\n        <GrContactInfo /> Contacts\n      </h2>\n      <Filter value={filter} onChange={changeFilter} />\n      {contacts.length > 0 && (\n        <ContactsList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      )}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n// import store from \"./redux/store/index\";\n\nimport App from \"./component/App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={\"...LOADING\"} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}