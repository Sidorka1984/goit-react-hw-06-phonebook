{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","redux/selectors.js","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","index.js"],"names":["changeFilter","createAction","deleteContact","addContact","name","number","payload","id","uuidv4","items","createReducer","actions","state","filter","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Containers","styled","div","Title","h1","Container","title","children","TitleSecond","h2","Input","input","Button","button","getFilter","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Form","useState","setName","setNumber","dispatch","useDispatch","useSelector","nameInputId","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","some","console","log","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","disabled","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","map","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a539c686.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const changeFilter = createAction(\"items/Change\");\nexport const deleteContact = createAction(\"items/Delete\");\nexport const addContact = createAction(\"items/Save\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport * as actions from \"./actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","export const getFilter = (state) => state.contacts.filter;\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.normalizedFilter.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { addContact } from '../../redux/slices/todo.js';\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { getContacts } from \"../../redux/selectors.js\";\r\nimport * as actions from '../../redux/actions.js';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts);\r\n\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n      \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n      \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.some((contact) => contact.name === name)) {\r\n            console.log(`${name} already in the contacts.`);\r\n            return;\r\n        }\r\n\r\n        dispatch(actions.addContact({ name, number }));\r\n\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","// import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from '../../redux/selectors';\r\nimport * as actions from '../../redux/actions.js';\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-around;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { onDelete } from '../../redux/slices/todo.js';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\nimport * as actions from \"../../redux/actions.js\";\r\nimport { getVisibleContacts } from \"../../redux/selectors.js\";\r\n\r\nconst ContactsList = () => {\r\n    // const contacts = useSelector((state) => state.todo);\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><AiOutlineUser />\r\n                    <Text>{name}: {number}</Text>\r\n                    <BtnDelete onClick={() => onDeleteContact(id)}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactsList;","// import { useState, useEffect, useRef } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\nimport { GrContactInfo } from \"react-icons/gr\";\n// import ContactsJson from \"../Data/contacts.json\";\n// import { useSelector } from \"react-redux\";\n// import { getContacts } from \"../redux/selectors\";\n\nexport default function App() {\n  // const contacts = useSelector(getContacts);\n\n  return (\n    <Container title=\"Phonebook\">\n      <Form />\n      <h2>\n        <GrContactInfo /> Contacts\n      </h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n// import store from \"./redux/store/index\";\n\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}