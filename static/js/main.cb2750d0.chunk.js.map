{"version":3,"sources":["redux/slices/todo.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","redux/selectors.js","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","index.js"],"names":["initialState","contacts","JSON","parse","window","localStorage","getItem","initialContacts","filter","contactsSlice","createSlice","name","reducers","addContact","state","payload","deleteContact","contact","id","filterSlice","changeFilter","_","rootReduser","combineReducers","reducer","actions","store","configureStore","Containers","styled","div","Title","h1","Container","title","children","TitleSecond","h2","Input","input","Button","button","getFilter","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","some","toast","error","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","disabled","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","map","onClick","onDeleteContact","App","useEffect","setItem","stringify","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb2750d0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { combineReducers } from \"redux\";\nimport initialContacts from \"../../Data/contacts.json\";\n\nconst initialState = {\n  contacts:\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? initialContacts,\n  filter: \"\",\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: initialState.contacts,\n  reducers: {\n    addContact: (state, { payload }) => [payload, ...state],\n    deleteContact: (state, { payload }) =>\n      state.filter((contact) => contact.id !== payload),\n  },\n});\n\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: initialState.filter,\n  reducers: {\n    changeFilter: (_, { payload }) => payload,\n  },\n});\n\nconst rootReduser = combineReducers({\n  contacts: contactsSlice.reducer,\n  filter: filterSlice.reducer,\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport const { changeFilter } = filterSlice.actions;\n\nexport default rootReduser;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReduser from \"../redux/slices/todo\";\n\nconst store = configureStore({\n  reducer: rootReduser,\n});\n\nexport default store;\n\n// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// import contactsReducer from \"./reducer\";\n\n// const persistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(persistConfig, contactsReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// export const persistor = persistStore(store);\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","export const getFilter = (state) => state.filter;\n\nexport const getContacts = (state) => state.contacts;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { addContact } from '../../redux/slices/todo.js';\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { getContacts } from \"../../redux/selectors.js\";\r\n// import * as actions from '../../redux/actions.js';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();   \r\n\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n      \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n      \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.some((contact) => contact.name === name || contact.number === number)) {\r\n            toast.error(`${name} or ${number} already in the contacts.`);\r\n            \r\n            reset();\r\n            return;\r\n        } else {\r\n            dispatch(addContact({\r\n                id: uuidv4(),\r\n                name,\r\n                number,\r\n            }))\r\n            reset();\r\n        };\r\n\r\n        // if (contacts.some((contact) => contact.name === name)) {\r\n            // toast.error(`${name} already in the contacts.`);\r\n            // reset();\r\n            // return;\r\n        // }\r\n        //  if (contacts.some((contact) => contact.number === number)) {\r\n            //  toast.error(`${number} already in the contacts.`);\r\n            //  reset();\r\n            //  return;\r\n        // };\r\n\r\n        // dispatch(actions.addContact({ name, number }));\r\n\r\n        // reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n// Form.propTypes = {\r\n    // onSubmit: PropTypes.func.isRequired,\r\n// }","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","// import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from '../../redux/selectors';\r\n// import * as actions from '../../redux/actions.js';\r\nimport { changeFilter } from '../../redux/slices/todo';\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n    \r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-around;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from '../../redux/slices/todo.js';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\n// import * as actions from \"../../redux/actions.js\";\r\nimport { getVisibleContacts } from \"../../redux/selectors.js\";\r\n\r\n\r\nconst ContactsList = () => {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><AiOutlineUser />\r\n                    <Text>{name}: {number}</Text>\r\n                    <BtnDelete onClick={() => onDeleteContact(id)}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactsList;","// import { useState, useEffect, useRef } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { Toaster } from \"react-hot-toast\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\nimport { GrContactInfo } from \"react-icons/gr\";\n// import ContactsJson from \"../Data/contacts.json\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getContacts } from \"../redux/selectors\";\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container title=\"Phonebook\">\n      <Toaster autoClose={4000} position=\"top-right\" />\n      <Form />\n      <h2>\n        <GrContactInfo /> Contacts\n      </h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import * as store from \"./redux/store\";\nimport store from \"./redux/store\";\n\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}